import string
import secrets

def get_user_input():
    length = int(input("Enter the desired password length (min 10): "))
    if length < 10:
        print("Password length must be at least 10 characters.")
        return None
    use_Ucase = input("Include uppercase letters? (y/n): ").lower() == "y"
    use_Lcase = input("Include lowercase letters? (y/n): ").lower() == "y"
    use_nums = input("Include nums? (y/n): ").lower() == "y"
    use_special_chars = input("Include special characters? (y/n): ").lower() == "y"
    quantity = int(input("Enter the number of passwords to generate (min 1): "))
    if quantity < 1:
        print("Must generate at least 1 password.")
        return None
    return length, use_Ucase, use_Lcase, use_nums, use_special_chars, quantity

def generate_passwords(length, use_Ucase, use_Lcase, use_nums, use_special_chars, quantity):
    chars = ""
    if use_Ucase:
        chars += string.ascii_uppercase
    if use_Lcase:
        chars += string.ascii_lowercase
    if use_nums:
        chars += string.digits
    if use_special_chars:
        chars += string.punctuation
    
    passwords = [''.join(secrets.choice(chars) for _ in range(length)) for _ in range(quantity)]
    return passwords

def main():
    user_input = get_user_input()
    if user_input is not None:
        length, use_Ucase, use_Lcase, use_nums, use_special_chars, quantity = user_input
        passwords = generate_passwords(length, use_Ucase, use_Lcase, use_nums, use_special_chars, quantity)
        for i, password in enumerate(passwords):
            print(f"Password {i + 1}: {password}")

if __name__ == "__main__":
    main()
